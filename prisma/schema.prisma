// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
}

model User {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  password       String
  profilePicture String   @default(" ")
  role           UserRole @default(USER)
  resetToken     String?  @unique

  courses     Course[]
  enrollments Enrollment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CourseLevel {
  BEGINNER
  INTERMEDIATE
  Expert
}

model Course {
  id          String      @id @default(uuid())
  title       String
  category    String
  level       CourseLevel @default(BEGINNER)
  description String
  instructor  String
  duration    Int
  price       Float

  userId    String
  createdBy User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  enrollments Enrollment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
